<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ytw1.dao.User.credential_checkMapper">
  <resultMap id="BaseResultMap" type="com.ytw1.entity.User.credential_check">
    <id column="credential_id" jdbcType="VARCHAR" property="credentialId" />
    <result column="credential_state" jdbcType="INTEGER" property="credentialState" />
    <result column="credential_reason" jdbcType="VARCHAR" property="credentialReason" />
    <result column="admin_id" jdbcType="VARCHAR" property="adminId" />
    <result column="create_dt" jdbcType="TIMESTAMP" property="createDt" />
  </resultMap>
  <sql id="Base_Column_List">
    credential_id, credential_state, credential_reason, admin_id, create_dt
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from credential_check
    where credential_id = #{credentialId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from credential_check
    where credential_id = #{credentialId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ytw1.entity.User.credential_check">
    insert into credential_check (credential_id, credential_state, credential_reason, 
      admin_id, create_dt)
    values (#{credentialId,jdbcType=VARCHAR}, #{credentialState,jdbcType=INTEGER}, #{credentialReason,jdbcType=VARCHAR}, 
      #{adminId,jdbcType=VARCHAR}, #{createDt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ytw1.entity.User.credential_check">
    insert into credential_check
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="credentialId != null">
        credential_id,
      </if>
      <if test="credentialState != null">
        credential_state,
      </if>
      <if test="credentialReason != null">
        credential_reason,
      </if>
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="createDt != null">
        create_dt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="credentialId != null">
        #{credentialId,jdbcType=VARCHAR},
      </if>
      <if test="credentialState != null">
        #{credentialState,jdbcType=INTEGER},
      </if>
      <if test="credentialReason != null">
        #{credentialReason,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null">
        #{adminId,jdbcType=VARCHAR},
      </if>
      <if test="createDt != null">
        #{createDt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ytw1.entity.User.credential_check">
    update credential_check
    <set>
      <if test="credentialState != null">
        credential_state = #{credentialState,jdbcType=INTEGER},
      </if>
      <if test="credentialReason != null">
        credential_reason = #{credentialReason,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null">
        admin_id = #{adminId,jdbcType=VARCHAR},
      </if>
      <if test="createDt != null">
        create_dt = #{createDt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where credential_id = #{credentialId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ytw1.entity.User.credential_check">
    update credential_check
    set credential_state = #{credentialState,jdbcType=INTEGER},
      credential_reason = #{credentialReason,jdbcType=VARCHAR},
      admin_id = #{adminId,jdbcType=VARCHAR},
      create_dt = #{createDt,jdbcType=TIMESTAMP}
    where credential_id = #{credentialId,jdbcType=VARCHAR}
  </update>
</mapper>